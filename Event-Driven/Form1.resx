<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>